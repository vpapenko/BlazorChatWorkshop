@page "/chat"
@using BlazorChat.ViewModels
@inject MessageViewModel MessagesView
@inject UserViewModel User

<h1>Chat</h1>

@if (MessagesView.Messages == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <span class="oi oi-loop-circular" aria-hidden="true" @onclick="Refresh"></span>

    <div>
        <h3>Name</h3>
        <span class="text-nowrap">
            <input @bind="User.Name" @bind:event="oninput" />
            @if (string.IsNullOrEmpty(User.Name))
            {
                <span>*</span>
            }
        </span>
    </div>

    <div>
        <h3>Message</h3>
        <input @bind="MessageViewModel.NewMessage" @bind:event="oninput" @onkeypress="KeyPress" />
    </div>

    <div>
        <hr />
        @foreach (var message in MessageViewModel.Messages.Reverse<BlasorChat.Models.Message>())
        {
            <div>
                <h3>@message.Text</h3>
                <span class="text-nowrap">
                    From: @message.Name, @message.Date.ToLocalTime()
                </span>
                <hr />
            </div>
        }
    </div>

}

@code {
    private string newMessage = "";

    protected override async Task OnInitializedAsync()
    {
        await MessagesView.LoadMessages();
    }

    private async Task Refresh(MouseEventArgs e)
    {
        await MessagesView.LoadMessages();
    }

    private async Task KeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" && !string.IsNullOrEmpty(newMessage) && !string.IsNullOrEmpty(User.Name))
        {
            await MessagesView.SendMessage(newMessage, User.Name);
            newMessage = "";
        }
    }
}
