@page "/chat"
@using BlazorChat.ViewModels
@inject MessageViewModel MessageViewModel
@inject UserViewModel User

<h1>Chat</h1>

@if (MessageViewModel.Messages == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <h3>Name</h3>
        <span class="text-nowrap">
            <input @bind="User.Name" @bind:event="oninput" />
            <span hidden="@User.UserNameOk">*</span>
        </span>
    </div>

    <div>
        <h3>Message</h3>
        <input @bind="MessageViewModel.NewMessage" @bind:event="oninput" @onkeypress="KeyPress" />
    </div>

    <div>
        <hr />
        @foreach (var message in MessageViewModel.Messages.Reverse<BlasorChat.Models.Message>())
        {
            <div>
                <h3>@message.Text</h3>
                <span class="text-nowrap">
                    From: @message.Name, @message.Date.ToLocalTime()
                </span>
                <hr />
            </div>
        }
    </div>

}

@code {

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() =>
        {
            MessageViewModel.PropertyChanged += async (sender, e) =>
            {
                await InvokeAsync(() =>
                {
                    StateHasChanged();
                });
            };
        });
    }

    private async Task KeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" && MessageViewModel.MessageCanBeSend)
        {
            await MessageViewModel.SendMessage(MessageViewModel.NewMessage, User.Name);
        }
    }
}
